<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.perms.demo.app.mapper.SysRoleMapper">

    <resultMap type="com.perms.demo.app.domain.SysRole" id="RoleMap">
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="rolePerms" column="role_perms" jdbcType="VARCHAR"/>
        <result property="dataScope" column="data_scope" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select role_id,
               role_name,
               role_perms,
               data_scope
        from user_role_menu.sys_role
        where role_id = #{roleId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select role_id,
               role_name,
               role_perms,
               data_scope
        from user_role_menu.sys_role
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleMap">
        select
        role_id, role_name, role_perms, data_scope
        from user_role_menu.sys_role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="rolePerms != null and rolePerms != ''">
                and role_perms = #{rolePerms}
            </if>
            <if test="dataScope != null and dataScope != ''">
                and data_scope = #{dataScope}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="roleId" useGeneratedKeys="true">
        insert into user_role_menu.sys_role(role_name, role_perms, data_scope)
        values (#{roleName}, #{rolePerms}, #{dataScope})
    </insert>

    <insert id="insertBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into user_role_menu.sys_role(role_name, role_perms, data_scope)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.rolePerms}, #{entity.dataScope})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into user_role_menu.sys_role(role_name, role_perms, data_scope)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.rolePerms}, #{entity.dataScope})
        </foreach>
        on duplicate key update
        role_name = values(role_name) , role_perms = values(role_perms) , data_scope = values(data_scope)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user_role_menu.sys_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="rolePerms != null and rolePerms != ''">
                role_perms = #{rolePerms},
            </if>
            <if test="dataScope != null and dataScope != ''">
                data_scope = #{dataScope},
            </if>
        </set>
        where role_id = #{roleId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user_role_menu.sys_role
        where role_id = #{roleId}
    </delete>

    <!-- 根据用户ID查询角色 -->
    <select id="selectRolePermissionByUserId" parameterType="Long" resultMap="RoleMap">
        select distinct r.role_id,
                        r.role_name,
                        r.role_perms,
                        r.data_scope
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.role_id
        left join sys_user u on u.user_id = ur.user_id
        WHERE ur.user_id = #{userId}
    </select>

</mapper>

